[1;31m
Start test 1[0m

)  .   ____          _            __ _ _
* /\\ / ___'_ __ _ _(_)_ __  __ _ \ \ \ \
+( ( )\___ | '_ | '_| | '_ \/ _` | \ \ \ \
, \\/  ___)| |_)| | | | | || (_| |  ) ) ) )
+  '  |____| .__|_| |_|_| |_\__, | / / / /
* =========|_|==============|___/=/_/_/_/
, :: Spring Boot ::        (v2.3.1.RELEASE)

Ö2022-08-12 16:03:13.229  INFO 17704 --- [    Test worker] antifraud.AntiFraudApplication           : Starting AntiFraudApplication on DESKTOP-1NFTNE0 with PID 17704 (started by pc in C:\Users\pc\Documents\Java Programs\Anti-Fraud System\Anti-Fraud System\task)
¶2022-08-12 16:03:13.237  INFO 17704 --- [    Test worker] antifraud.AntiFraudApplication           : No active profile set, falling back to default profiles: default
¢2022-08-12 16:03:17.746  INFO 17704 --- [    Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFERRED mode.
ª2022-08-12 16:03:17.924  INFO 17704 --- [    Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 154ms. Found 1 JPA repository interfaces.
ì2022-08-12 16:03:19.748  INFO 17704 --- [    Test worker] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 28852 (http)
2022-08-12 16:03:19.774  INFO 17704 --- [    Test worker] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
ï2022-08-12 16:03:19.774  INFO 17704 --- [    Test worker] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.36]
ò2022-08-12 16:03:20.005  INFO 17704 --- [    Test worker] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
•2022-08-12 16:03:20.005  INFO 17704 --- [    Test worker] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 6611 ms
Ä2022-08-12 16:03:20.428  INFO 17704 --- [    Test worker] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
Ö2022-08-12 16:03:21.023  INFO 17704 --- [    Test worker] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
∑2022-08-12 16:03:21.061  INFO 17704 --- [    Test worker] o.s.b.a.h2.H2ConsoleAutoConfiguration    : H2 console available at '/h2'. Database available at 'jdbc:h2:file:../service_db'
ú2022-08-12 16:03:21.418  INFO 17704 --- [    Test worker] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
ü2022-08-12 16:03:21.543  INFO 17704 --- [         task-1] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
ù2022-08-12 16:03:21.620  WARN 17704 --- [    Test worker] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
ò2022-08-12 16:03:21.760  INFO 17704 --- [         task-1] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 5.4.17.Final
¢2022-08-12 16:03:22.252  INFO 17704 --- [    Test worker] o.s.b.a.w.s.WelcomePageHandlerMapping    : Adding welcome page: class path resource [static/index.html]
û2022-08-12 16:03:22.294  INFO 17704 --- [         task-1] o.hibernate.annotations.common.Version   : HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
ü2022-08-12 16:03:22.705  INFO 17704 --- [         task-1] org.hibernate.dialect.Dialect            : HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
õ2022-08-12 16:03:22.739  INFO 17704 --- [    Test worker] o.s.b.a.e.web.EndpointLinksResolver      : Exposing 14 endpoint(s) beneath base path '/actuator'
ü2022-08-12 16:03:22.889  INFO 17704 --- [    Test worker] o.s.s.web.DefaultSecurityFilterChain     : Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@1de73d37, org.springframework.security.web.context.SecurityContextPersistenceFilter@708769b7, org.springframework.security.web.header.HeaderWriterFilter@7c226095, org.springframework.security.web.authentication.logout.LogoutFilter@45707f76, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@608b35fa, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@135e49b2, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@36238b12, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@31693a86, org.springframework.security.web.session.SessionManagementFilter@1716c037, org.springframework.security.web.access.ExceptionTranslationFilter@4f402027, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@7b4b8199]
ÂHibernate: create table user_details_impl (id bigint generated by default as identity, is_account_non_locked boolean not null, name varchar(255), password varchar(255), role binary(255), username varchar(255), primary key (id))
Ÿ2022-08-12 16:03:24.770  INFO 17704 --- [         task-1] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
©2022-08-12 16:03:24.787  INFO 17704 --- [         task-1] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
¢2022-08-12 16:03:25.029  INFO 17704 --- [    Test worker] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 28852 (http) with context path ''
ß2022-08-12 16:03:25.031  INFO 17704 --- [    Test worker] DeferredRepositoryInitializationListener : Triggering deferred initialization of Spring Data repositories‚Ä¶
ã2022-08-12 16:03:25.618  INFO 17704 --- [    Test worker] DeferredRepositoryInitializationListener : Spring Data repositories initialized!
≠2022-08-12 16:03:25.639  INFO 17704 --- [    Test worker] antifraud.AntiFraudApplication           : Started AntiFraudApplication in 13.441 seconds (JVM running for 15.267)

Test case
Testing api: '/api/auth/user'
request: '{
   "name": "John Doe 1",
   "password": "oa3VvqnLxW"
}'
hExpectations: 'In case of wrong data in request, endpoint must respond with BAD REQUEST  status (400).'
-----
ü2022-08-12 16:03:26.311  INFO 17704 --- [io-28852-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
é2022-08-12 16:03:26.312  INFO 17704 --- [io-28852-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
á2022-08-12 16:03:26.327  INFO 17704 --- [io-28852-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 15 ms
˙2022-08-12 16:03:26.679  WARN 17704 --- [io-28852-exec-1] .w.s.m.s.DefaultHandlerExceptionResolver : Resolved [org.springframework.web.bind.MethodArgumentNotValidException: Validation failed for argument [0] in public org.springframework.http.ResponseEntity<antifraud.models.UserInfoReceipt> antifraud.controllers.AuthController.registerUser(antifraud.models.UserDetailsImpl): [Field error in object 'userDetailsImpl' on field 'username': rejected value [null]; codes [NotBlank.userDetailsImpl.username,NotBlank.username,NotBlank.java.lang.String,NotBlank]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [userDetailsImpl.username,username]; arguments []; default message [username]]; default message [must not be blank]] ]
[1;31m
Start test 2[0m

Test case
Testing api: '/api/auth/user'
request: '{
   "name": "John Doe 2",
   "username": "johndoe1"
}'
hExpectations: 'In case of wrong data in request, endpoint must respond with BAD REQUEST  status (400).'
-----
˙2022-08-12 16:03:26.769  WARN 17704 --- [io-28852-exec-2] .w.s.m.s.DefaultHandlerExceptionResolver : Resolved [org.springframework.web.bind.MethodArgumentNotValidException: Validation failed for argument [0] in public org.springframework.http.ResponseEntity<antifraud.models.UserInfoReceipt> antifraud.controllers.AuthController.registerUser(antifraud.models.UserDetailsImpl): [Field error in object 'userDetailsImpl' on field 'password': rejected value [null]; codes [NotBlank.userDetailsImpl.password,NotBlank.password,NotBlank.java.lang.String,NotBlank]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [userDetailsImpl.password,password]; arguments []; default message [password]]; default message [must not be blank]] ]
[1;31m
Start test 3[0m

Test case
Testing api: '/api/auth/user'
request: '{
   "name": "John Doe 1",
   "username": "johndoe1",
   "password": "oMoa3VvqnLxW"
}'
bExpectations: 'If user successfully added, endpoint must respond with HTTP CREATED status (201) '
-----
ëHibernate: select userdetail0_.id as id1_0_, userdetail0_.is_account_non_locked as is_accou2_0_, userdetail0_.name as name3_0_, userdetail0_.password as password4_0_, userdetail0_.role as role5_0_, userdetail0_.username as username6_0_ from user_details_impl userdetail0_
ØHibernate: select userdetail0_.id as id1_0_, userdetail0_.is_account_non_locked as is_accou2_0_, userdetail0_.name as name3_0_, userdetail0_.password as password4_0_, userdetail0_.role as role5_0_, userdetail0_.username as username6_0_ from user_details_impl userdetail0_ where userdetail0_.username=?
ÉHibernate: insert into user_details_impl (id, is_account_non_locked, name, password, role, username) values (null, ?, ?, ?, ?, ?)
[1;31m
Start test 4[0m

Test case
Testing api: '/api/auth/list'
óExpectations: 'Endpoint must respond with HTTP OK status (200) and body with array of objects representing the users sorted by ID in ascending order.'
-----
ØHibernate: select userdetail0_.id as id1_0_, userdetail0_.is_account_non_locked as is_accou2_0_, userdetail0_.name as name3_0_, userdetail0_.password as password4_0_, userdetail0_.role as role5_0_, userdetail0_.username as username6_0_ from user_details_impl userdetail0_ where userdetail0_.username=?
ëHibernate: select userdetail0_.id as id1_0_, userdetail0_.is_account_non_locked as is_accou2_0_, userdetail0_.name as name3_0_, userdetail0_.password as password4_0_, userdetail0_.role as role5_0_, userdetail0_.username as username6_0_ from user_details_impl userdetail0_
[1;31m
Start test 5[0m

Test case
Testing api: '/api/auth/user'
request: '{
   "name": "John Doe 1",
   "username": "johndoe1",
   "password": "oMoa3VvqnLxW"
}'
bExpectations: 'If user successfully added, endpoint must respond with HTTP CREATED status (201) '
-----
ëHibernate: select userdetail0_.id as id1_0_, userdetail0_.is_account_non_locked as is_accou2_0_, userdetail0_.name as name3_0_, userdetail0_.password as password4_0_, userdetail0_.role as role5_0_, userdetail0_.username as username6_0_ from user_details_impl userdetail0_
ØHibernate: select userdetail0_.id as id1_0_, userdetail0_.is_account_non_locked as is_accou2_0_, userdetail0_.name as name3_0_, userdetail0_.password as password4_0_, userdetail0_.role as role5_0_, userdetail0_.username as username6_0_ from user_details_impl userdetail0_ where userdetail0_.username=?
ÉHibernate: insert into user_details_impl (id, is_account_non_locked, name, password, role, username) values (null, ?, ?, ?, ?, ?)
[1;31m
Start test 6[0m

Test case
Testing api: '/api/auth/list'
óExpectations: 'Endpoint must respond with HTTP OK status (200) and body with array of objects representing the users sorted by ID in ascending order.'
-----
ØHibernate: select userdetail0_.id as id1_0_, userdetail0_.is_account_non_locked as is_accou2_0_, userdetail0_.name as name3_0_, userdetail0_.password as password4_0_, userdetail0_.role as role5_0_, userdetail0_.username as username6_0_ from user_details_impl userdetail0_ where userdetail0_.username=?
ëHibernate: select userdetail0_.id as id1_0_, userdetail0_.is_account_non_locked as is_accou2_0_, userdetail0_.name as name3_0_, userdetail0_.password as password4_0_, userdetail0_.role as role5_0_, userdetail0_.username as username6_0_ from user_details_impl userdetail0_
[1;31m
Start test 7[0m

Test case
Testing api: '/api/auth/list'
AExpectations: 'A user with incorrect credentials is not allowed'
-----
ØHibernate: select userdetail0_.id as id1_0_, userdetail0_.is_account_non_locked as is_accou2_0_, userdetail0_.name as name3_0_, userdetail0_.password as password4_0_, userdetail0_.role as role5_0_, userdetail0_.username as username6_0_ from user_details_impl userdetail0_ where userdetail0_.username=?
[1;31m
Start test 8[0m

Test case
Testing api: '/api/auth/list'
AExpectations: 'A user with incorrect credentials is not allowed'
-----
ØHibernate: select userdetail0_.id as id1_0_, userdetail0_.is_account_non_locked as is_accou2_0_, userdetail0_.name as name3_0_, userdetail0_.password as password4_0_, userdetail0_.role as role5_0_, userdetail0_.username as username6_0_ from user_details_impl userdetail0_ where userdetail0_.username=?
[1;31m
Start test 9[0m

Test case
*Testing api: '/api/antifraud/transaction'
;Expectations: 'Merchant after registration must be LOCKED'
-----
ØHibernate: select userdetail0_.id as id1_0_, userdetail0_.is_account_non_locked as is_accou2_0_, userdetail0_.name as name3_0_, userdetail0_.password as password4_0_, userdetail0_.role as role5_0_, userdetail0_.username as username6_0_ from user_details_impl userdetail0_ where userdetail0_.username=?
[1;31m
Start test 10[0m

Test case
 Testing api: '/api/auth/access'
1Expectations: 'A user johndoe1 must be UNLOCKED'
-----
ØHibernate: select userdetail0_.id as id1_0_, userdetail0_.is_account_non_locked as is_accou2_0_, userdetail0_.name as name3_0_, userdetail0_.password as password4_0_, userdetail0_.role as role5_0_, userdetail0_.username as username6_0_ from user_details_impl userdetail0_ where userdetail0_.username=?
ØHibernate: select userdetail0_.id as id1_0_, userdetail0_.is_account_non_locked as is_accou2_0_, userdetail0_.name as name3_0_, userdetail0_.password as password4_0_, userdetail0_.role as role5_0_, userdetail0_.username as username6_0_ from user_details_impl userdetail0_ where userdetail0_.username=?
tHibernate: update user_details_impl set is_account_non_locked=?, name=?, password=?, role=?, username=? where id=?
[1;31m
Start test 11[0m

Test case
*Testing api: '/api/antifraud/transaction'
1Expectations: 'A user johndoe1 must be UNLOCKED'
-----
ØHibernate: select userdetail0_.id as id1_0_, userdetail0_.is_account_non_locked as is_accou2_0_, userdetail0_.name as name3_0_, userdetail0_.password as password4_0_, userdetail0_.role as role5_0_, userdetail0_.username as username6_0_ from user_details_impl userdetail0_ where userdetail0_.username=?
[1;31m
Start test 12[0m

Test case
*Testing api: '/api/antifraud/transaction'
request: 'amount = 1'
CExpectations: 'Result validating of Transaction must be 'ALLOWED''
-----
ØHibernate: select userdetail0_.id as id1_0_, userdetail0_.is_account_non_locked as is_accou2_0_, userdetail0_.name as name3_0_, userdetail0_.password as password4_0_, userdetail0_.role as role5_0_, userdetail0_.username as username6_0_ from user_details_impl userdetail0_ where userdetail0_.username=?
[1;31m
Start test 13[0m
•2022-08-12 16:03:29.705  INFO 17704 --- [     Thread-336] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
ù2022-08-12 16:03:29.728  INFO 17704 --- [     Thread-336] o.s.s.concurrent.ThreadPoolTaskExecutor  : Shutting down ExecutorService 'applicationTaskExecutor'
ä2022-08-12 16:03:29.733  INFO 17704 --- [     Thread-336] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown initiated...
à2022-08-12 16:03:29.789  INFO 17704 --- [     Thread-336] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown completed.

)  .   ____          _            __ _ _
* /\\ / ___'_ __ _ _(_)_ __  __ _ \ \ \ \
+( ( )\___ | '_ | '_| | '_ \/ _` | \ \ \ \
, \\/  ___)| |_)| | | | | || (_| |  ) ) ) )
+  '  |____| .__|_| |_|_| |_\__, | / / / /
* =========|_|==============|___/=/_/_/_/
, :: Spring Boot ::        (v2.3.1.RELEASE)

Ö2022-08-12 16:03:30.031  INFO 17704 --- [    Test worker] antifraud.AntiFraudApplication           : Starting AntiFraudApplication on DESKTOP-1NFTNE0 with PID 17704 (started by pc in C:\Users\pc\Documents\Java Programs\Anti-Fraud System\Anti-Fraud System\task)
¶2022-08-12 16:03:30.032  INFO 17704 --- [    Test worker] antifraud.AntiFraudApplication           : No active profile set, falling back to default profiles: default
¢2022-08-12 16:03:30.966  INFO 17704 --- [    Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFERRED mode.
∫2022-08-12 16:03:30.986  INFO 17704 --- [    Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 19ms. Found 1 JPA repository interfaces.
ì2022-08-12 16:03:31.164  INFO 17704 --- [    Test worker] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 28852 (http)
2022-08-12 16:03:31.166  INFO 17704 --- [    Test worker] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
ï2022-08-12 16:03:31.167  INFO 17704 --- [    Test worker] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.36]
ò2022-08-12 16:03:31.244  INFO 17704 --- [    Test worker] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
•2022-08-12 16:03:31.244  INFO 17704 --- [    Test worker] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 1205 ms
Ä2022-08-12 16:03:31.310  INFO 17704 --- [    Test worker] com.zaxxer.hikari.HikariDataSource       : HikariPool-2 - Starting...
Ö2022-08-12 16:03:31.323  INFO 17704 --- [    Test worker] com.zaxxer.hikari.HikariDataSource       : HikariPool-2 - Start completed.
∑2022-08-12 16:03:31.323  INFO 17704 --- [    Test worker] o.s.b.a.h2.H2ConsoleAutoConfiguration    : H2 console available at '/h2'. Database available at 'jdbc:h2:file:../service_db'
ú2022-08-12 16:03:31.397  INFO 17704 --- [    Test worker] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
ü2022-08-12 16:03:31.406  INFO 17704 --- [         task-1] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
ü2022-08-12 16:03:31.423  INFO 17704 --- [         task-1] org.hibernate.dialect.Dialect            : HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
ù2022-08-12 16:03:31.466  WARN 17704 --- [    Test worker] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
Ÿ2022-08-12 16:03:31.527  INFO 17704 --- [         task-1] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
©2022-08-12 16:03:31.528  INFO 17704 --- [         task-1] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
¢2022-08-12 16:03:31.565  INFO 17704 --- [    Test worker] o.s.b.a.w.s.WelcomePageHandlerMapping    : Adding welcome page: class path resource [static/index.html]
õ2022-08-12 16:03:31.717  INFO 17704 --- [    Test worker] o.s.b.a.e.web.EndpointLinksResolver      : Exposing 14 endpoint(s) beneath base path '/actuator'
û2022-08-12 16:03:31.735  INFO 17704 --- [    Test worker] o.s.s.web.DefaultSecurityFilterChain     : Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@59b3f162, org.springframework.security.web.context.SecurityContextPersistenceFilter@4eace42b, org.springframework.security.web.header.HeaderWriterFilter@43549c6c, org.springframework.security.web.authentication.logout.LogoutFilter@418bdde9, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@13e0f380, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@6f87a7c7, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@857f1a7, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@7ade62a6, org.springframework.security.web.session.SessionManagementFilter@7792e14f, org.springframework.security.web.access.ExceptionTranslationFilter@49cd08f9, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@4ef28dc4]
¢2022-08-12 16:03:31.854  INFO 17704 --- [    Test worker] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 28852 (http) with context path ''
ß2022-08-12 16:03:31.856  INFO 17704 --- [    Test worker] DeferredRepositoryInitializationListener : Triggering deferred initialization of Spring Data repositories‚Ä¶
ã2022-08-12 16:03:31.903  INFO 17704 --- [    Test worker] DeferredRepositoryInitializationListener : Spring Data repositories initialized!
´2022-08-12 16:03:31.911  INFO 17704 --- [    Test worker] antifraud.AntiFraudApplication           : Started AntiFraudApplication in 2.007 seconds (JVM running for 21.54)
[1;31m
Start test 14[0m

Test case
Testing api: '/api/auth/list'
.Expectations: 'After restart user must exist'
-----
ü2022-08-12 16:03:31.921  INFO 17704 --- [io-28852-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
é2022-08-12 16:03:31.922  INFO 17704 --- [io-28852-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
Ü2022-08-12 16:03:31.925  INFO 17704 --- [io-28852-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 3 ms
ØHibernate: select userdetail0_.id as id1_0_, userdetail0_.is_account_non_locked as is_accou2_0_, userdetail0_.name as name3_0_, userdetail0_.password as password4_0_, userdetail0_.role as role5_0_, userdetail0_.username as username6_0_ from user_details_impl userdetail0_ where userdetail0_.username=?
ëHibernate: select userdetail0_.id as id1_0_, userdetail0_.is_account_non_locked as is_accou2_0_, userdetail0_.name as name3_0_, userdetail0_.password as password4_0_, userdetail0_.role as role5_0_, userdetail0_.username as username6_0_ from user_details_impl userdetail0_
[1;31m
Start test 15[0m

Test case
Testing api: '/api/auth/user'
request: '{
   "name": "John Doe 1",
   "username": "johndoe1",
   "password": "oMoa3VvqnLxW"
}'
{Expectations: 'In case of an attempt to register an existing user, endpoint must respond with HTTP CONFLICT status (409).'
-----
ëHibernate: select userdetail0_.id as id1_0_, userdetail0_.is_account_non_locked as is_accou2_0_, userdetail0_.name as name3_0_, userdetail0_.password as password4_0_, userdetail0_.role as role5_0_, userdetail0_.username as username6_0_ from user_details_impl userdetail0_
ØHibernate: select userdetail0_.id as id1_0_, userdetail0_.is_account_non_locked as is_accou2_0_, userdetail0_.name as name3_0_, userdetail0_.password as password4_0_, userdetail0_.role as role5_0_, userdetail0_.username as username6_0_ from user_details_impl userdetail0_ where userdetail0_.username=?
[1;31m
Start test 16[0m

Test case
Testing api: '/api/auth/user'
request: '{
   "name": "John Doe 2",
   "username": "johndoe2",
   "password": "oMoa5VvqnLxW"
}'
bExpectations: 'If user successfully added, endpoint must respond with HTTP CREATED status (201) '
-----
ëHibernate: select userdetail0_.id as id1_0_, userdetail0_.is_account_non_locked as is_accou2_0_, userdetail0_.name as name3_0_, userdetail0_.password as password4_0_, userdetail0_.role as role5_0_, userdetail0_.username as username6_0_ from user_details_impl userdetail0_
ØHibernate: select userdetail0_.id as id1_0_, userdetail0_.is_account_non_locked as is_accou2_0_, userdetail0_.name as name3_0_, userdetail0_.password as password4_0_, userdetail0_.role as role5_0_, userdetail0_.username as username6_0_ from user_details_impl userdetail0_ where userdetail0_.username=?
ÉHibernate: insert into user_details_impl (id, is_account_non_locked, name, password, role, username) values (null, ?, ?, ?, ?, ?)
[1;31m
Start test 17[0m

Test case
Testing api: '/api/auth/list'
óExpectations: 'Endpoint must respond with HTTP OK status (200) and body with array of objects representing the users sorted by ID in ascending order.'
-----
ØHibernate: select userdetail0_.id as id1_0_, userdetail0_.is_account_non_locked as is_accou2_0_, userdetail0_.name as name3_0_, userdetail0_.password as password4_0_, userdetail0_.role as role5_0_, userdetail0_.username as username6_0_ from user_details_impl userdetail0_ where userdetail0_.username=?
ëHibernate: select userdetail0_.id as id1_0_, userdetail0_.is_account_non_locked as is_accou2_0_, userdetail0_.name as name3_0_, userdetail0_.password as password4_0_, userdetail0_.role as role5_0_, userdetail0_.username as username6_0_ from user_details_impl userdetail0_
[1;31m
Start test 18[0m

Test case
*Testing api: '/api/antifraud/transaction'
request: 'amount = 199'
CExpectations: 'Result validating of Transaction must be 'ALLOWED''
-----
ØHibernate: select userdetail0_.id as id1_0_, userdetail0_.is_account_non_locked as is_accou2_0_, userdetail0_.name as name3_0_, userdetail0_.password as password4_0_, userdetail0_.role as role5_0_, userdetail0_.username as username6_0_ from user_details_impl userdetail0_ where userdetail0_.username=?
[1;31m
Start test 19[0m

Test case
*Testing api: '/api/antifraud/transaction'
request: 'amount = 200'
CExpectations: 'Result validating of Transaction must be 'ALLOWED''
-----
ØHibernate: select userdetail0_.id as id1_0_, userdetail0_.is_account_non_locked as is_accou2_0_, userdetail0_.name as name3_0_, userdetail0_.password as password4_0_, userdetail0_.role as role5_0_, userdetail0_.username as username6_0_ from user_details_impl userdetail0_ where userdetail0_.username=?
[1;31m
Start test 20[0m

Test case
*Testing api: '/api/antifraud/transaction'
request: 'amount = 201'
MExpectations: 'Result validating of Transaction must be 'MANUAL_PROCESSING''
-----
ØHibernate: select userdetail0_.id as id1_0_, userdetail0_.is_account_non_locked as is_accou2_0_, userdetail0_.name as name3_0_, userdetail0_.password as password4_0_, userdetail0_.role as role5_0_, userdetail0_.username as username6_0_ from user_details_impl userdetail0_ where userdetail0_.username=?
[1;31m
Start test 21[0m

Test case
*Testing api: '/api/antifraud/transaction'
request: 'amount = 1499'
MExpectations: 'Result validating of Transaction must be 'MANUAL_PROCESSING''
-----
ØHibernate: select userdetail0_.id as id1_0_, userdetail0_.is_account_non_locked as is_accou2_0_, userdetail0_.name as name3_0_, userdetail0_.password as password4_0_, userdetail0_.role as role5_0_, userdetail0_.username as username6_0_ from user_details_impl userdetail0_ where userdetail0_.username=?
[1;31m
Start test 22[0m

Test case
*Testing api: '/api/antifraud/transaction'
request: 'amount = 1500'
MExpectations: 'Result validating of Transaction must be 'MANUAL_PROCESSING''
-----
ØHibernate: select userdetail0_.id as id1_0_, userdetail0_.is_account_non_locked as is_accou2_0_, userdetail0_.name as name3_0_, userdetail0_.password as password4_0_, userdetail0_.role as role5_0_, userdetail0_.username as username6_0_ from user_details_impl userdetail0_ where userdetail0_.username=?
[1;31m
Start test 23[0m

Test case
*Testing api: '/api/antifraud/transaction'
request: 'amount = 1501'
FExpectations: 'Result validating of Transaction must be 'PROHIBITED''
-----
ØHibernate: select userdetail0_.id as id1_0_, userdetail0_.is_account_non_locked as is_accou2_0_, userdetail0_.name as name3_0_, userdetail0_.password as password4_0_, userdetail0_.role as role5_0_, userdetail0_.username as username6_0_ from user_details_impl userdetail0_ where userdetail0_.username=?
[1;31m
Start test 24[0m

Test case
*Testing api: '/api/antifraud/transaction'
request: 'amount = 2000'
FExpectations: 'Result validating of Transaction must be 'PROHIBITED''
-----
ØHibernate: select userdetail0_.id as id1_0_, userdetail0_.is_account_non_locked as is_accou2_0_, userdetail0_.name as name3_0_, userdetail0_.password as password4_0_, userdetail0_.role as role5_0_, userdetail0_.username as username6_0_ from user_details_impl userdetail0_ where userdetail0_.username=?
[1;31m
Start test 25[0m

Test case
*Testing api: '/api/antifraud/transaction'
request: 'amount = -1'
6Expectations: 'Response status must be 'Bad request''
-----
ØHibernate: select userdetail0_.id as id1_0_, userdetail0_.is_account_non_locked as is_accou2_0_, userdetail0_.name as name3_0_, userdetail0_.password as password4_0_, userdetail0_.role as role5_0_, userdetail0_.username as username6_0_ from user_details_impl userdetail0_ where userdetail0_.username=?
˙2022-08-12 16:03:33.843  WARN 17704 --- [io-28852-exec-7] .w.s.m.s.DefaultHandlerExceptionResolver : Resolved [org.springframework.web.bind.MethodArgumentNotValidException: Validation failed for argument [0] in public static org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.String>> antifraud.controllers.AntiFraudController.checkTransaction(antifraud.models.Transaction): [Field error in object 'transaction' on field 'amount': rejected value [-1]; codes [Min.transaction.amount,Min.amount,Min.java.lang.Long,Min]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [transaction.amount,amount]; arguments []; default message [amount],1]; default message [must be greater than or equal to 1]] ]
[1;31m
Start test 26[0m

Test case
*Testing api: '/api/antifraud/transaction'
request: 'amount = 0'
6Expectations: 'Response status must be 'Bad request''
-----
ØHibernate: select userdetail0_.id as id1_0_, userdetail0_.is_account_non_locked as is_accou2_0_, userdetail0_.name as name3_0_, userdetail0_.password as password4_0_, userdetail0_.role as role5_0_, userdetail0_.username as username6_0_ from user_details_impl userdetail0_ where userdetail0_.username=?
˘2022-08-12 16:03:33.976  WARN 17704 --- [io-28852-exec-8] .w.s.m.s.DefaultHandlerExceptionResolver : Resolved [org.springframework.web.bind.MethodArgumentNotValidException: Validation failed for argument [0] in public static org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.String>> antifraud.controllers.AntiFraudController.checkTransaction(antifraud.models.Transaction): [Field error in object 'transaction' on field 'amount': rejected value [0]; codes [Min.transaction.amount,Min.amount,Min.java.lang.Long,Min]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [transaction.amount,amount]; arguments []; default message [amount],1]; default message [must be greater than or equal to 1]] ]
[1;31m
Start test 27[0m

Test case
*Testing api: '/api/antifraud/transaction'
request: 'amount = null'
6Expectations: 'Response status must be 'Bad request''
-----
ØHibernate: select userdetail0_.id as id1_0_, userdetail0_.is_account_non_locked as is_accou2_0_, userdetail0_.name as name3_0_, userdetail0_.password as password4_0_, userdetail0_.role as role5_0_, userdetail0_.username as username6_0_ from user_details_impl userdetail0_ where userdetail0_.username=?
¯2022-08-12 16:03:34.101  WARN 17704 --- [io-28852-exec-9] .w.s.m.s.DefaultHandlerExceptionResolver : Resolved [org.springframework.web.bind.MethodArgumentNotValidException: Validation failed for argument [0] in public static org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.String>> antifraud.controllers.AntiFraudController.checkTransaction(antifraud.models.Transaction): [Field error in object 'transaction' on field 'amount': rejected value [null]; codes [NotNull.transaction.amount,NotNull.amount,NotNull.java.lang.Long,NotNull]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [transaction.amount,amount]; arguments []; default message [amount]]; default message [must not be null]] ]
[1;31m
Start test 28[0m

Test case
*Testing api: '/api/antifraud/transaction'
request: 'amount = ""'
6Expectations: 'Response status must be 'Bad request''
-----
ØHibernate: select userdetail0_.id as id1_0_, userdetail0_.is_account_non_locked as is_accou2_0_, userdetail0_.name as name3_0_, userdetail0_.password as password4_0_, userdetail0_.role as role5_0_, userdetail0_.username as username6_0_ from user_details_impl userdetail0_ where userdetail0_.username=?
¯2022-08-12 16:03:34.221  WARN 17704 --- [io-28852-exec-5] .w.s.m.s.DefaultHandlerExceptionResolver : Resolved [org.springframework.web.bind.MethodArgumentNotValidException: Validation failed for argument [0] in public static org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.String>> antifraud.controllers.AntiFraudController.checkTransaction(antifraud.models.Transaction): [Field error in object 'transaction' on field 'amount': rejected value [null]; codes [NotNull.transaction.amount,NotNull.amount,NotNull.java.lang.Long,NotNull]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [transaction.amount,amount]; arguments []; default message [amount]]; default message [must not be null]] ]
[1;31m
Start test 29[0m

Test case
*Testing api: '/api/antifraud/transaction'
request: 'amount = " "'
6Expectations: 'Response status must be 'Bad request''
-----
ØHibernate: select userdetail0_.id as id1_0_, userdetail0_.is_account_non_locked as is_accou2_0_, userdetail0_.name as name3_0_, userdetail0_.password as password4_0_, userdetail0_.role as role5_0_, userdetail0_.username as username6_0_ from user_details_impl userdetail0_ where userdetail0_.username=?
¯2022-08-12 16:03:34.345  WARN 17704 --- [o-28852-exec-10] .w.s.m.s.DefaultHandlerExceptionResolver : Resolved [org.springframework.web.bind.MethodArgumentNotValidException: Validation failed for argument [0] in public static org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.String>> antifraud.controllers.AntiFraudController.checkTransaction(antifraud.models.Transaction): [Field error in object 'transaction' on field 'amount': rejected value [null]; codes [NotNull.transaction.amount,NotNull.amount,NotNull.java.lang.Long,NotNull]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [transaction.amount,amount]; arguments []; default message [amount]]; default message [must not be null]] ]
[1;31m
Start test 30[0m

Test case
*Testing api: '/api/antifraud/transaction'
request: 'empty body'
6Expectations: 'Response status must be 'Bad request''
-----
ØHibernate: select userdetail0_.id as id1_0_, userdetail0_.is_account_non_locked as is_accou2_0_, userdetail0_.name as name3_0_, userdetail0_.password as password4_0_, userdetail0_.role as role5_0_, userdetail0_.username as username6_0_ from user_details_impl userdetail0_ where userdetail0_.username=?
¯2022-08-12 16:03:34.494  WARN 17704 --- [io-28852-exec-1] .w.s.m.s.DefaultHandlerExceptionResolver : Resolved [org.springframework.web.bind.MethodArgumentNotValidException: Validation failed for argument [0] in public static org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.String>> antifraud.controllers.AntiFraudController.checkTransaction(antifraud.models.Transaction): [Field error in object 'transaction' on field 'amount': rejected value [null]; codes [NotNull.transaction.amount,NotNull.amount,NotNull.java.lang.Long,NotNull]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [transaction.amount,amount]; arguments []; default message [amount]]; default message [must not be null]] ]
[1;31m
Start test 31[0m

Test case
Testing api: '/api/auth/user'
#request: '/api/auth/user/somebody'
RExpectations: 'If a user is not found, respond with HTTP Not Found status (404).'
-----
ØHibernate: select userdetail0_.id as id1_0_, userdetail0_.is_account_non_locked as is_accou2_0_, userdetail0_.name as name3_0_, userdetail0_.password as password4_0_, userdetail0_.role as role5_0_, userdetail0_.username as username6_0_ from user_details_impl userdetail0_ where userdetail0_.username=?
ØHibernate: select userdetail0_.id as id1_0_, userdetail0_.is_account_non_locked as is_accou2_0_, userdetail0_.name as name3_0_, userdetail0_.password as password4_0_, userdetail0_.role as role5_0_, userdetail0_.username as username6_0_ from user_details_impl userdetail0_ where userdetail0_.username=?
[1;31m
Start test 32[0m

Test case
Testing api: '/api/auth/user'
#request: '/api/auth/user/johndoe1'
XExpectations: 'The endpoint must delete the user and respond with HTTP OK status (200)'
-----
ØHibernate: select userdetail0_.id as id1_0_, userdetail0_.is_account_non_locked as is_accou2_0_, userdetail0_.name as name3_0_, userdetail0_.password as password4_0_, userdetail0_.role as role5_0_, userdetail0_.username as username6_0_ from user_details_impl userdetail0_ where userdetail0_.username=?
ØHibernate: select userdetail0_.id as id1_0_, userdetail0_.is_account_non_locked as is_accou2_0_, userdetail0_.name as name3_0_, userdetail0_.password as password4_0_, userdetail0_.role as role5_0_, userdetail0_.username as username6_0_ from user_details_impl userdetail0_ where userdetail0_.username=?
5Hibernate: delete from user_details_impl where id=?
[1;31m
Start test 33[0m

Test case
Testing api: '/api/auth/list'
/Expectations: 'User 'johndoe1' must be delete'
-----
ØHibernate: select userdetail0_.id as id1_0_, userdetail0_.is_account_non_locked as is_accou2_0_, userdetail0_.name as name3_0_, userdetail0_.password as password4_0_, userdetail0_.role as role5_0_, userdetail0_.username as username6_0_ from user_details_impl userdetail0_ where userdetail0_.username=?
ëHibernate: select userdetail0_.id as id1_0_, userdetail0_.is_account_non_locked as is_accou2_0_, userdetail0_.name as name3_0_, userdetail0_.password as password4_0_, userdetail0_.role as role5_0_, userdetail0_.username as username6_0_ from user_details_impl userdetail0_
[1;31m
Start test 34[0m

Test case
Testing api: '/api/auth/role'
dExpectations: 'If a user is not found, endpoint must respond with the HTTP Not Found status (404).'
-----
ØHibernate: select userdetail0_.id as id1_0_, userdetail0_.is_account_non_locked as is_accou2_0_, userdetail0_.name as name3_0_, userdetail0_.password as password4_0_, userdetail0_.role as role5_0_, userdetail0_.username as username6_0_ from user_details_impl userdetail0_ where userdetail0_.username=?
ØHibernate: select userdetail0_.id as id1_0_, userdetail0_.is_account_non_locked as is_accou2_0_, userdetail0_.name as name3_0_, userdetail0_.password as password4_0_, userdetail0_.role as role5_0_, userdetail0_.username as username6_0_ from user_details_impl userdetail0_ where userdetail0_.username=?
[1;31m
Start test 35[0m

Test case
Testing api: '/api/auth/role'
fExpectations: 'If a role is not found, endpoint must respond with the HTTP Bad Request status (400).'
-----
ØHibernate: select userdetail0_.id as id1_0_, userdetail0_.is_account_non_locked as is_accou2_0_, userdetail0_.name as name3_0_, userdetail0_.password as password4_0_, userdetail0_.role as role5_0_, userdetail0_.username as username6_0_ from user_details_impl userdetail0_ where userdetail0_.username=?
ØHibernate: select userdetail0_.id as id1_0_, userdetail0_.is_account_non_locked as is_accou2_0_, userdetail0_.name as name3_0_, userdetail0_.password as password4_0_, userdetail0_.role as role5_0_, userdetail0_.username as username6_0_ from user_details_impl userdetail0_ where userdetail0_.username=?
[1;31m
Start test 36[0m

Test case
Testing api: '/api/auth/role'
jExpectations: 'If a role is ADMINISTRATOR, endpoint must respond with the HTTP Bad Request status (400).'
-----
ØHibernate: select userdetail0_.id as id1_0_, userdetail0_.is_account_non_locked as is_accou2_0_, userdetail0_.name as name3_0_, userdetail0_.password as password4_0_, userdetail0_.role as role5_0_, userdetail0_.username as username6_0_ from user_details_impl userdetail0_ where userdetail0_.username=?
ØHibernate: select userdetail0_.id as id1_0_, userdetail0_.is_account_non_locked as is_accou2_0_, userdetail0_.name as name3_0_, userdetail0_.password as password4_0_, userdetail0_.role as role5_0_, userdetail0_.username as username6_0_ from user_details_impl userdetail0_ where userdetail0_.username=?
[1;31m
Start test 37[0m

Test case
Testing api: '/api/auth/role'
VExpectations: 'If a role successfully changed, respond with the HTTP OK status (200)'
-----
ØHibernate: select userdetail0_.id as id1_0_, userdetail0_.is_account_non_locked as is_accou2_0_, userdetail0_.name as name3_0_, userdetail0_.password as password4_0_, userdetail0_.role as role5_0_, userdetail0_.username as username6_0_ from user_details_impl userdetail0_ where userdetail0_.username=?
ØHibernate: select userdetail0_.id as id1_0_, userdetail0_.is_account_non_locked as is_accou2_0_, userdetail0_.name as name3_0_, userdetail0_.password as password4_0_, userdetail0_.role as role5_0_, userdetail0_.username as username6_0_ from user_details_impl userdetail0_ where userdetail0_.username=?
tHibernate: update user_details_impl set is_account_non_locked=?, name=?, password=?, role=?, username=? where id=?
[1;31m
Start test 38[0m

Test case
Testing api: '/api/auth/role'
qExpectations: 'If a role already assigned to a user, endpoint must respond with the HTTP Conflict status (409).'
-----
ØHibernate: select userdetail0_.id as id1_0_, userdetail0_.is_account_non_locked as is_accou2_0_, userdetail0_.name as name3_0_, userdetail0_.password as password4_0_, userdetail0_.role as role5_0_, userdetail0_.username as username6_0_ from user_details_impl userdetail0_ where userdetail0_.username=?
ØHibernate: select userdetail0_.id as id1_0_, userdetail0_.is_account_non_locked as is_accou2_0_, userdetail0_.name as name3_0_, userdetail0_.password as password4_0_, userdetail0_.role as role5_0_, userdetail0_.username as username6_0_ from user_details_impl userdetail0_ where userdetail0_.username=?
[1;31m
Start test 39[0m

Test case
 Testing api: '/api/auth/access'
1Expectations: 'A user johndoe2 must be UNLOCKED'
-----
ØHibernate: select userdetail0_.id as id1_0_, userdetail0_.is_account_non_locked as is_accou2_0_, userdetail0_.name as name3_0_, userdetail0_.password as password4_0_, userdetail0_.role as role5_0_, userdetail0_.username as username6_0_ from user_details_impl userdetail0_ where userdetail0_.username=?
ØHibernate: select userdetail0_.id as id1_0_, userdetail0_.is_account_non_locked as is_accou2_0_, userdetail0_.name as name3_0_, userdetail0_.password as password4_0_, userdetail0_.role as role5_0_, userdetail0_.username as username6_0_ from user_details_impl userdetail0_ where userdetail0_.username=?
tHibernate: update user_details_impl set is_account_non_locked=?, name=?, password=?, role=?, username=? where id=?
[1;31m
Start test 40[0m

Test case
Testing api: '/api/auth/list'
DExpectations: 'Role for user 'johndoe2' must be changed to SUPPORT'
-----
ØHibernate: select userdetail0_.id as id1_0_, userdetail0_.is_account_non_locked as is_accou2_0_, userdetail0_.name as name3_0_, userdetail0_.password as password4_0_, userdetail0_.role as role5_0_, userdetail0_.username as username6_0_ from user_details_impl userdetail0_ where userdetail0_.username=?
ëHibernate: select userdetail0_.id as id1_0_, userdetail0_.is_account_non_locked as is_accou2_0_, userdetail0_.name as name3_0_, userdetail0_.password as password4_0_, userdetail0_.role as role5_0_, userdetail0_.username as username6_0_ from user_details_impl userdetail0_
[1;31m
Start test 41[0m

Test case
*Testing api: '/api/antifraud/transaction'
BExpectations: 'Role MERCHANT must be removed from user johndoe2!'
-----
ØHibernate: select userdetail0_.id as id1_0_, userdetail0_.is_account_non_locked as is_accou2_0_, userdetail0_.name as name3_0_, userdetail0_.password as password4_0_, userdetail0_.role as role5_0_, userdetail0_.username as username6_0_ from user_details_impl userdetail0_ where userdetail0_.username=?
[1;31m
Start test 42[0m

Test case
Testing api: '/api/auth/user'
request: '{
   "name": "John Doe 3",
   "username": "johndoe3",
   "password": "oMoa6VvqnLxW"
}'
bExpectations: 'If user successfully added, endpoint must respond with HTTP CREATED status (201) '
-----
ëHibernate: select userdetail0_.id as id1_0_, userdetail0_.is_account_non_locked as is_accou2_0_, userdetail0_.name as name3_0_, userdetail0_.password as password4_0_, userdetail0_.role as role5_0_, userdetail0_.username as username6_0_ from user_details_impl userdetail0_
ØHibernate: select userdetail0_.id as id1_0_, userdetail0_.is_account_non_locked as is_accou2_0_, userdetail0_.name as name3_0_, userdetail0_.password as password4_0_, userdetail0_.role as role5_0_, userdetail0_.username as username6_0_ from user_details_impl userdetail0_ where userdetail0_.username=?
ÉHibernate: insert into user_details_impl (id, is_account_non_locked, name, password, role, username) values (null, ?, ?, ?, ?, ?)
[1;31m
Start test 43[0m

Test case
*Testing api: '/api/antifraud/transaction'
@Expectations: 'MERCHANT user after registration must be LOCKED'
-----
ØHibernate: select userdetail0_.id as id1_0_, userdetail0_.is_account_non_locked as is_accou2_0_, userdetail0_.name as name3_0_, userdetail0_.password as password4_0_, userdetail0_.role as role5_0_, userdetail0_.username as username6_0_ from user_details_impl userdetail0_ where userdetail0_.username=?
[1;31m
Start test 44[0m

Test case
 Testing api: '/api/auth/access'
1Expectations: 'A user johndoe3 must be UNLOCKED'
-----
ØHibernate: select userdetail0_.id as id1_0_, userdetail0_.is_account_non_locked as is_accou2_0_, userdetail0_.name as name3_0_, userdetail0_.password as password4_0_, userdetail0_.role as role5_0_, userdetail0_.username as username6_0_ from user_details_impl userdetail0_ where userdetail0_.username=?
ØHibernate: select userdetail0_.id as id1_0_, userdetail0_.is_account_non_locked as is_accou2_0_, userdetail0_.name as name3_0_, userdetail0_.password as password4_0_, userdetail0_.role as role5_0_, userdetail0_.username as username6_0_ from user_details_impl userdetail0_ where userdetail0_.username=?
tHibernate: update user_details_impl set is_account_non_locked=?, name=?, password=?, role=?, username=? where id=?
[1;31m
Start test 45[0m

Test case
*Testing api: '/api/antifraud/transaction'
1Expectations: 'A user johndoe3 must be UNLOCKED'
-----
ØHibernate: select userdetail0_.id as id1_0_, userdetail0_.is_account_non_locked as is_accou2_0_, userdetail0_.name as name3_0_, userdetail0_.password as password4_0_, userdetail0_.role as role5_0_, userdetail0_.username as username6_0_ from user_details_impl userdetail0_ where userdetail0_.username=?
[1;31m
Start test 46[0m

Test case
 Testing api: '/api/auth/access'
/Expectations: 'A user johndoe3 must be LOCKED'
-----
ØHibernate: select userdetail0_.id as id1_0_, userdetail0_.is_account_non_locked as is_accou2_0_, userdetail0_.name as name3_0_, userdetail0_.password as password4_0_, userdetail0_.role as role5_0_, userdetail0_.username as username6_0_ from user_details_impl userdetail0_ where userdetail0_.username=?
ØHibernate: select userdetail0_.id as id1_0_, userdetail0_.is_account_non_locked as is_accou2_0_, userdetail0_.name as name3_0_, userdetail0_.password as password4_0_, userdetail0_.role as role5_0_, userdetail0_.username as username6_0_ from user_details_impl userdetail0_ where userdetail0_.username=?
tHibernate: update user_details_impl set is_account_non_locked=?, name=?, password=?, role=?, username=? where id=?
[1;31m
Start test 47[0m

Test case
*Testing api: '/api/antifraud/transaction'
/Expectations: 'A user johndoe3 must be LOCKED'
-----
ØHibernate: select userdetail0_.id as id1_0_, userdetail0_.is_account_non_locked as is_accou2_0_, userdetail0_.name as name3_0_, userdetail0_.password as password4_0_, userdetail0_.role as role5_0_, userdetail0_.username as username6_0_ from user_details_impl userdetail0_ where userdetail0_.username=?
[1;31m
Start test 48[0m

Test case
 Testing api: '/api/auth/access'
1Expectations: 'A user johndoe3 must be UNLOCKED'
-----
ØHibernate: select userdetail0_.id as id1_0_, userdetail0_.is_account_non_locked as is_accou2_0_, userdetail0_.name as name3_0_, userdetail0_.password as password4_0_, userdetail0_.role as role5_0_, userdetail0_.username as username6_0_ from user_details_impl userdetail0_ where userdetail0_.username=?
ØHibernate: select userdetail0_.id as id1_0_, userdetail0_.is_account_non_locked as is_accou2_0_, userdetail0_.name as name3_0_, userdetail0_.password as password4_0_, userdetail0_.role as role5_0_, userdetail0_.username as username6_0_ from user_details_impl userdetail0_ where userdetail0_.username=?
tHibernate: update user_details_impl set is_account_non_locked=?, name=?, password=?, role=?, username=? where id=?
[1;31m
Start test 49[0m

Test case
*Testing api: '/api/antifraud/transaction'
bExpectations: 'A user with role ADMINISTRATOR must not have access to /api/antifraud/transaction'
-----
ØHibernate: select userdetail0_.id as id1_0_, userdetail0_.is_account_non_locked as is_accou2_0_, userdetail0_.name as name3_0_, userdetail0_.password as password4_0_, userdetail0_.role as role5_0_, userdetail0_.username as username6_0_ from user_details_impl userdetail0_ where userdetail0_.username=?
[1;31m
Start test 50[0m

Test case
+Testing api: '/api/antifraud/transaction/'
cExpectations: 'A user with role ADMINISTRATOR must not have access to /api/antifraud/transaction/'
-----
ØHibernate: select userdetail0_.id as id1_0_, userdetail0_.is_account_non_locked as is_accou2_0_, userdetail0_.name as name3_0_, userdetail0_.password as password4_0_, userdetail0_.role as role5_0_, userdetail0_.username as username6_0_ from user_details_impl userdetail0_ where userdetail0_.username=?
[1;31m
Start test 51[0m

Test case
*Testing api: '/api/antifraud/transaction'
\Expectations: 'A user with role SUPPORT must not have access to /api/antifraud/transaction'
-----
ØHibernate: select userdetail0_.id as id1_0_, userdetail0_.is_account_non_locked as is_accou2_0_, userdetail0_.name as name3_0_, userdetail0_.password as password4_0_, userdetail0_.role as role5_0_, userdetail0_.username as username6_0_ from user_details_impl userdetail0_ where userdetail0_.username=?
[1;31m
Start test 52[0m

Test case
+Testing api: '/api/antifraud/transaction/'
]Expectations: 'A user with role SUPPORT must not have access to /api/antifraud/transaction/'
-----
ØHibernate: select userdetail0_.id as id1_0_, userdetail0_.is_account_non_locked as is_accou2_0_, userdetail0_.name as name3_0_, userdetail0_.password as password4_0_, userdetail0_.role as role5_0_, userdetail0_.username as username6_0_ from user_details_impl userdetail0_ where userdetail0_.username=?
[1;31m
Start test 53[0m

Test case
*Testing api: '/api/antifraud/transaction'
^Expectations: 'A user with role ANONYMOUS must not have access to /api/antifraud/transaction'
-----
[1;31m
Start test 54[0m

Test case
Testing api: '/api/auth/user'
YExpectations: 'A user with role ANONYMOUS must not have access to DELETE /api/auth/user'
-----
[1;31m
Start test 55[0m

Test case
Testing api: '/api/auth/user'
WExpectations: 'A user with role SUPPORT must not have access to DELETE /api/auth/user'
-----
ØHibernate: select userdetail0_.id as id1_0_, userdetail0_.is_account_non_locked as is_accou2_0_, userdetail0_.name as name3_0_, userdetail0_.password as password4_0_, userdetail0_.role as role5_0_, userdetail0_.username as username6_0_ from user_details_impl userdetail0_ where userdetail0_.username=?
[1;31m
Start test 56[0m

Test case
Testing api: '/api/auth/user'
XExpectations: 'A user with role MERCHANT must not have access to DELETE /api/auth/user'
-----
ØHibernate: select userdetail0_.id as id1_0_, userdetail0_.is_account_non_locked as is_accou2_0_, userdetail0_.name as name3_0_, userdetail0_.password as password4_0_, userdetail0_.role as role5_0_, userdetail0_.username as username6_0_ from user_details_impl userdetail0_ where userdetail0_.username=?
[1;31m
Start test 57[0m

Test case
Testing api: '/api/auth/user'
XExpectations: 'A user with role MERCHANT must not have access to DELETE /api/auth/user'
-----
ØHibernate: select userdetail0_.id as id1_0_, userdetail0_.is_account_non_locked as is_accou2_0_, userdetail0_.name as name3_0_, userdetail0_.password as password4_0_, userdetail0_.role as role5_0_, userdetail0_.username as username6_0_ from user_details_impl userdetail0_ where userdetail0_.username=?
[1;31m
Start test 58[0m

Test case
Testing api: '/api/auth/list'
RExpectations: 'A user with role ANONYMOUS must not have access to /api/auth/list'
-----
[1;31m
Start test 59[0m

Test case
Testing api: '/api/auth/list'
QExpectations: 'A user with role MERCHANT must not have access to /api/auth/list'
-----
ØHibernate: select userdetail0_.id as id1_0_, userdetail0_.is_account_non_locked as is_accou2_0_, userdetail0_.name as name3_0_, userdetail0_.password as password4_0_, userdetail0_.role as role5_0_, userdetail0_.username as username6_0_ from user_details_impl userdetail0_ where userdetail0_.username=?
[1;31m
Start test 60[0m

Test case
 Testing api: '/api/auth/access'
SExpectations: 'A user with role MERCHANT must not have access to /api/auth/access'
-----
ØHibernate: select userdetail0_.id as id1_0_, userdetail0_.is_account_non_locked as is_accou2_0_, userdetail0_.name as name3_0_, userdetail0_.password as password4_0_, userdetail0_.role as role5_0_, userdetail0_.username as username6_0_ from user_details_impl userdetail0_ where userdetail0_.username=?
[1;31m
Start test 61[0m

Test case
 Testing api: '/api/auth/access'
RExpectations: 'A user with role SUPPORT must not have access to /api/auth/access'
-----
ØHibernate: select userdetail0_.id as id1_0_, userdetail0_.is_account_non_locked as is_accou2_0_, userdetail0_.name as name3_0_, userdetail0_.password as password4_0_, userdetail0_.role as role5_0_, userdetail0_.username as username6_0_ from user_details_impl userdetail0_ where userdetail0_.username=?
[1;31m
Start test 62[0m

Test case
!Testing api: '/api/auth/access/'
TExpectations: 'A user with role MERCHANT must not have access to /api/auth/access/'
-----
ØHibernate: select userdetail0_.id as id1_0_, userdetail0_.is_account_non_locked as is_accou2_0_, userdetail0_.name as name3_0_, userdetail0_.password as password4_0_, userdetail0_.role as role5_0_, userdetail0_.username as username6_0_ from user_details_impl userdetail0_ where userdetail0_.username=?
[1;31m
Start test 63[0m

Test case
!Testing api: '/api/auth/access/'
SExpectations: 'A user with role SUPPORT must not have access to /api/auth/access/'
-----
ØHibernate: select userdetail0_.id as id1_0_, userdetail0_.is_account_non_locked as is_accou2_0_, userdetail0_.name as name3_0_, userdetail0_.password as password4_0_, userdetail0_.role as role5_0_, userdetail0_.username as username6_0_ from user_details_impl userdetail0_ where userdetail0_.username=?
[1;31m
Start test 64[0m

Test case
 Testing api: '/api/auth/access'
TExpectations: 'A user with role ANONYMOUS must not have access to /api/auth/access'
-----
[1;31m
Start test 65[0m

Test case
Testing api: '/api/auth/role'
PExpectations: 'A user with role SUPPORT must not have access to /api/auth/role'
-----
ØHibernate: select userdetail0_.id as id1_0_, userdetail0_.is_account_non_locked as is_accou2_0_, userdetail0_.name as name3_0_, userdetail0_.password as password4_0_, userdetail0_.role as role5_0_, userdetail0_.username as username6_0_ from user_details_impl userdetail0_ where userdetail0_.username=?
[1;31m
Start test 66[0m

Test case
Testing api: '/api/auth/role'
QExpectations: 'A user with role MERCHANT must not have access to /api/auth/role'
-----
ØHibernate: select userdetail0_.id as id1_0_, userdetail0_.is_account_non_locked as is_accou2_0_, userdetail0_.name as name3_0_, userdetail0_.password as password4_0_, userdetail0_.role as role5_0_, userdetail0_.username as username6_0_ from user_details_impl userdetail0_ where userdetail0_.username=?
[1;31m
Start test 67[0m

Test case
Testing api: '/api/auth/role'
RExpectations: 'A user with role ANONYMOUS must not have access to /api/auth/role'
-----
[1;31m
Start test 68[0m

Test case
Testing api: '/api/auth/role/'
QExpectations: 'A user with role SUPPORT must not have access to /api/auth/role/'
-----
ØHibernate: select userdetail0_.id as id1_0_, userdetail0_.is_account_non_locked as is_accou2_0_, userdetail0_.name as name3_0_, userdetail0_.password as password4_0_, userdetail0_.role as role5_0_, userdetail0_.username as username6_0_ from user_details_impl userdetail0_ where userdetail0_.username=?
[1;31m
Start test 69[0m

Test case
Testing api: '/api/auth/role/'
RExpectations: 'A user with role MERCHANT must not have access to /api/auth/role/'
-----
ØHibernate: select userdetail0_.id as id1_0_, userdetail0_.is_account_non_locked as is_accou2_0_, userdetail0_.name as name3_0_, userdetail0_.password as password4_0_, userdetail0_.role as role5_0_, userdetail0_.username as username6_0_ from user_details_impl userdetail0_ where userdetail0_.username=?
